plugins {
    id("maven-publish")
    id("dev.architectury.loom").version("latest.release")
}

group = "net.auoeke"
version = "3.0.0"

def gameVersion = "1.18.1"
def yarn = "6"
def forgeVersion = "39.0.5"

sourceCompatibility = 17
targetCompatibility = 17

sourceSets {
    main {
        java.srcDirs = ["source"]

        resources {
            srcDirs = ["resources"]
            include("assets/", "META-INF/", "pack.mcmeta", "*.json")
        }
    }
}

repositories {
    maven {url = "https://maven.auoeke.net"}
}

loom {
    forge {
        mixinConfig("soulbound-armory.mixins.json", "soulbound-armory.components.mixins.json", "soulbound-armory.text.mixins.json")
    }
}

configurations {
    library {
        implementation.extendsFrom(it)

        afterEvaluate {
            new File(loom.files.projectPersistentCache, "forge_minecraft_classpath.txt") << resolvedConfiguration.files.collect {'\n' + it}.join()
        }
    }
}

dependencies {
    minecraft("com.mojang:minecraft:$gameVersion")
    mappings("net.fabricmc:yarn:$gameVersion+build.$yarn:v2")
    forge("net.minecraftforge:forge:$gameVersion-$forgeVersion")

    library("net.auoeke:reflect:latest.integration")
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-nowarn")
}

java {
    withSourcesJar()
}

processResources {

}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }

    repositories {
        maven {
            url = "https://maven.auoeke.net"

            credentials {
                username = System.properties["maven.username"]
                password = System.properties["maven.password"]
            }
        }
    }
}
