buildscript {
    dependencies {
        classpath("net.auoeke:reflect:latest.release")
    }
}

plugins {
    id("maven-publish")
    id("gronk").version("latest.release")
    id("dev.architectury.loom").version("latest.release")
}

group("net.auoeke")
version("3.0.0")

def gameVersion = "1.18.1"
def yarn = "12"
def forgeVersion = "39.0.8"

gronk {
    javaVersion(17)
}

sourceSets {
    main.resources.include("assets/", "META-INF/", "pack.mcmeta", "*.json")
}

repositories {
    maven("maven.auoeke.net")
}

loom {
    forge {
        mixinConfig("soulbound-armory.mixins.json", "soulbound-armory.components.mixins.json", "soulbound-armory.text.mixins.json")
    }

    if (Boolean.getBoolean("idea.sync.active")) {
        // `RunConfigSettings` has a property `project`—which is null—so store the actual project here.
        def project = this.project

        runs {
            all {run ->
                net.auoeke.reflect.Accessor.putReference(run, "envVariables", new HashMap() {
                    Object put(Object key, Object value) {
                        if (key == "MOD_CLASSES") {
                            // Replace Gradle's output by IntelliJ IDEA's output.
                            // Gradle's output interferes even if it is specified last.
                            value = "main%%${file("out/production/${project.name}.${run.getSource(project).name}")}" as String
                        }

                        return super.put(key, value)
                    }
                })
            }
        }
    }
}

dependencies {
    minecraft("com.mojang:minecraft:$gameVersion")
    mappings("net.fabricmc:yarn:$gameVersion+build.$yarn:v2")
    forge("net.minecraftforge:forge:$gameVersion-$forgeVersion")

    forgeDependencies("net.auoeke:reflect")
}

tasks.withType(JavaCompile) {
    options.compilerArgs.add("-nowarn")
}

processResources {
    filesMatching("META-INF/mods.toml") {
        filter(line -> line.replace("0VERSION", version as String))
    }
}

publishing {
    repositories {
        maven("maven.auoeke.net") {
            credentials {
                username = System.properties["maven.username"]
                password = System.properties["maven.password"]
            }
        }
    }
}
