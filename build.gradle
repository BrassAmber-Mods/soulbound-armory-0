buildscript {
    dependencies {
        classpath(group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "5.+", changing: true)
        classpath("org.spongepowered:mixingradle:0.7-SNAPSHOT")
    }
}

plugins {
    id("maven-publish")
}

plugins.with {
    apply("net.minecraftforge.gradle")
    apply("org.spongepowered.mixin")
}

group = "net.auoeke"
version = "3.0.0"

sourceCompatibility = 16
targetCompatibility = 16

sourceSets {
    main {
        java.srcDir("src")

        resources {
            srcDir("resources")
            include("assets/", "META-INF/", "pack.mcmeta", "*.json")
        }
    }
}

repositories {
    maven {url = "https://maven.auoeke.net"}
}

dependencies {
    minecraft("net.minecraftforge:forge:1.17.1-37.0.104")
    implementation("net.auoeke:reflect:latest.integration")

    if (!Boolean.getBoolean("idea.sync.active")) {
        annotationProcessor("org.spongepowered:mixin:0.8.+:processor")
    }
}

minecraft {
    mappings("official", "1.17.1")

    runs {
        ["client", "server"].each {
            register(it) {
                properties("mixin.env.remapRefMap": "true")
                property("mixin.env.refMapRemappingFile", "${project.buildDir}/createSrgToMcp/output.srg")
                workingDirectory(project.file("run"))
                arg("-mixin.config=${project.name}.mixins.json" as String)

                property("forge.logging.console.level", "debug")

                mods {
                    soulboundarmory {
                        source(sourceSets.main)
                    }
                }
            }
        }
    }
}

mixin {
    add(sourceSets.main, "${project.name}.refmap.json")
}

jar {
    manifest.attributes(
        "Specification-Title": project.name,
        "Specification-Vendor": project.group,
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
        "Implementation-Vendor": project.group,
        "MixinConfigs": "${project.name}.mixins.json"
    )
}

// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfArtifact = artifacts.add("default", file("$buildDir/reobfJar/output.jar")) {
    type("jar")
    builtBy("reobfJar")
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact(reobfArtifact)
        }
    }

    repositories {
        maven {
            url = "https://maven.auoeke.net"

            credentials {
                username = System.properties["maven.username"]
                password = System.properties["maven.password"]
            }
        }
    }
}
